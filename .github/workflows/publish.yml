name: Publish Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-rust:
    name: Build Rust Library (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            lib-name: librust_pty.so
            artifact-name: librust_pty-linux
          - os: windows-latest
            lib-name: rust_pty.dll
            artifact-name: rust_pty-windows
          - os: macos-latest
            lib-name: librust_pty.dylib
            artifact-name: librust_pty-macos

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Build Rust Library
        run: |
          cd rust-pty
          cargo build --release
      
      - name: Upload Rust Library (Linux/macOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: rust-pty/target/release/${{ matrix.lib-name }}
          if-no-files-found: error
      
      - name: Upload Rust Library (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: rust-pty/target/release/${{ matrix.lib-name }}
          if-no-files-found: error

  publish:
    name: Publish to npm
    needs: build-rust
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install Dependencies
        run: bun install
      
      - name: Create release directory
        run: |
          mkdir -p rust-pty/target/release
      
      - name: Download Linux Library
        uses: actions/download-artifact@v3
        with:
          name: librust_pty-linux
          path: rust-pty/target/release/
      
      - name: Download Windows Library
        uses: actions/download-artifact@v3
        with:
          name: rust_pty-windows
          path: rust-pty/target/release/
      
      - name: Download macOS Library
        uses: actions/download-artifact@v3
        with:
          name: librust_pty-macos
          path: rust-pty/target/release/
      
      - name: Build TypeScript
        run: bun run build:ts
      
      - name: Set up npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 